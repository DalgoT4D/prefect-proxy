version: "3.9"
services:
  ## Test DB
  prefect_postgres_db:
    container_name: prefect_db
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-securepass}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5433:5432"
    restart: unless-stopped

  ## Prefect Proxy
  prefect_proxy:
    image: prefect_proxy:latest #change this to point to dockerhub
    restart: always
    environment:
      - LOGDIR=${LOGDIR}
      - PREFECT_API_URL=${PREFECT_API_URL}
    ports:
      - "4300:4300"

  ### Prefect Server API and UI
  prefect_server:
    image: prefecthq/prefect:2.13.5-python3.10
    restart: always
    depends_on:
      - prefect_postgres_db
    volumes:
      - prefect:/root/.prefect
    entrypoint: ["/opt/prefect/entrypoint.sh", "prefect", "server", "start"]
    environment:
      - PREFECT_UI_URL=${PREFECT_API_URL}
      - PREFECT_API_URL=${PREFECT_API_URL}
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_API_DATABASE_CONNECTION_URL=${DB_CONNECTION_URL}

    ports:
      - "4200:4200"

  ## Prefect Agent
  prefect_agent:
    image: prefecthq/prefect:2.13.5-python3.10
    restart: always
    depends_on:
      - prefect_server
      - prefect_proxy
    entrypoint:
      [
        "/opt/prefect/entrypoint.sh",
        "prefect",
        "agent",
        "start",
        "-q",
        "${PREFECT_WORK_QUEUE_NAME}",
        "--pool",
        "${PREFECT_POOL_NAME}",
      ]
    environment:
      - PREFECT_API_URL=${PREFECT_API_URL}

volumes:
  prefect:
  postgres:
networks:
  default:
    name: prefect-network
