services:
  ## Test DB
  prefect_postgres_db:
    container_name: prefect_db
    image: postgres
    environment:
      POSTGRES_DB: prefect_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: securepass
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5433:5432"
    restart: unless-stopped

  ## Prefect Proxy
  prefect_proxy:
    image: prefect_proxy:latest #change this to point to dockerhub if image exists in dockerhub
    restart: unless-stopped
    environment:
      - LOGDIR=${LOGDIR}
      - PREFECT_API_URL=${PREFECT_API_URL}
    ports:
      - "4300:4300"
    volumes:
      - flows_volume:/app/proxy

  ### Prefect Server API and UI
  prefect_server:
    image: prefect_server:latest
    restart: unless-stopped
    depends_on:
      - prefect_postgres_db
    entrypoint: ["/bin/sh", "/opt/prefect/start_prefect_server.sh"]
    environment:
      - PREFECT_UI_URL=${PREFECT_API_URL}
      - PREFECT_API_URL=${PREFECT_API_URL}
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://postgres:securepass@prefect_db:5432/postgres
      - WORK_POOL_NAME=${PREFECT_POOL_NAME}
      - WORK_POOL_TYPE=${PREFECT_WORK_POOL_TYPE}
      - PREFECT_WORK_QUEUE1=${PREFECT_WORK_QUEUE1_NAME}
      - QUEUE1_CONCURRENCY_LIMIT=${PREFECT_WORK_QUEUE1_CONCURRENCY_LIMIT}
      - PREFECT_WORK_QUEUE2=${PREFECT_WORK_QUEUE2_NAME}
      - QUEUE2_CONCURRENCY_LIMIT=${PREFECT_WORK_QUEUE2_CONCURRENCY_LIMIT}
    ports:
      - "4200:4200"
    volumes:
      - prefect:/root/.prefect
      - ./start_prefect_server.sh:/opt/prefect/start_prefect_server.sh:ro

  ## Prefect Worker for ddp queue
  prefect-worker-ddp-queue-1:
    image: prefect_server:latest #change this to point to dockerhub if image exists in dockerhub
    restart: unless-stopped
    depends_on:
      - prefect_server
    entrypoint: ["/bin/sh", "/opt/prefect/start_prefect_worker.sh"]
    environment:
      - PREFECT_API_URL=${PREFECT_API_URL}
      - WORK_POOL_NAME=${PREFECT_POOL_NAME}
      - WORK_QUEUE_NAME=${PREFECT_WORK_QUEUE1_NAME}
      - WORKER_NAME=prefect-worker-ddp-1
      - FLOW_RUN_LIMIT=1
    volumes:
      - flows_volume:/app/proxy
      - ./start_prefect_worker.sh:/opt/prefect/start_prefect_worker.sh:ro

   ## Prefect Worker for ddp queue
  prefect-worker-ddp-queue-2:
    image: prefect_server:latest #change this to point to dockerhub if image exists in dockerhub
    restart: unless-stopped
    depends_on:
      - prefect_server
    entrypoint: ["/bin/sh", "/opt/prefect/start_prefect_worker.sh"]
    environment:
      - PREFECT_API_URL=${PREFECT_API_URL}
      - WORK_POOL_NAME=${PREFECT_POOL_NAME}
      - WORK_QUEUE_NAME=${PREFECT_WORK_QUEUE1_NAME}
      - WORKER_NAME=prefect-worker-ddp-2
      - FLOW_RUN_LIMIT=1
    volumes:
      - flows_volume:/app/proxy
      - ./start_prefect_worker.sh:/opt/prefect/start_prefect_worker.sh:ro

  ## Prefect Worker for manual-dbt queue
  prefect-worker-manual-dbt-queue-1:
    image: prefect_server:latest #change this to point to dockerhub if image exists in dockerhub
    restart: unless-stopped
    depends_on:
      - prefect_server
    entrypoint: ["/bin/sh", "/opt/prefect/start_prefect_worker.sh"]
    environment:
      - PREFECT_API_URL=${PREFECT_API_URL}
      - WORK_POOL_NAME=${PREFECT_POOL_NAME}
      - WORK_QUEUE_NAME=${PREFECT_WORK_QUEUE1_NAME}
      - WORKER_NAME=prefect-worker-manual-dbt-1
      - FLOW_RUN_LIMIT=1
    volumes:
      - flows_volume:/app/proxy
      - ./start_prefect_worker.sh:/opt/prefect/start_prefect_worker.sh:ro


volumes:
  prefect:
  postgres:
  flows_volume:
networks:
  default:
    name: prefect-network
